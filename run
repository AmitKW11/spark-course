#!/bin/bash -e

# start the spark and friends services
# If the host UID != container UID (1000), saving the notebook is not possible.
# we ask the container to use the host's UID/GID
export HOST_UID=$(id -u)
export HOST_GID=$(id -g)
echo HOST UID, GID = $HOST_UID  $HOST_GID
if [[ $1 == "spark" ]]; then
    echo "Starting Spark only"
    docker compose up --scale kafka=0 --scale zookeeper=0 -d
else
    docker compose up -d
fi
set -u

# open the browser on the jupyterlab notebook.

# keep trying until the URL is available

url=`docker logs spark-lab 2>&1 |  grep "http://127.0.0.1:8888/"  | tail -1 | cut -c 9- `
while [[ -z "$url" ]]
do
    echo "waiting for the container to be ready...."
    sleep 2
    url=`docker logs spark-lab 2>&1 |  grep "http://127.0.0.1:8888/"  | tail -1 | cut -c 9- `
done

echo Try to automatically open the URL
echo If the browser is not opened, Open browser on
    echo $url
set +eu
if [[ -n "$IS_WSL" || -n "$WSL_DISTRO_NAME" ]]; then
    echo "Running in Windows WSL"
    cmd.exe /C start $url
else
    echo "Running on non WSL machine. Probably Mac or linux"
    uname -a  |grep -i darwin > /dev/null
    isMacos=$?
    if [ $isMacos == 0 ]; then
        open $url
    else
        # This works only in Linux
        xdg-open $url
    fi
fi



